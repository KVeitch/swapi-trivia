{"version":3,"sources":["images/loading.gif","images/003-robot.svg","images/favorite.svg","images/star.svg","Form/Form.js","apiCalls.js","MovieCard/MovieCard.js","MovieContainer/MovieContainer.js","CharacterCard/CharacterCard.js","CharacterContainer/CharacterContainer.js","UserMenu/UserMenu.js","FavoriteCharacters/FavoriteCharacters.js","mock-data/C3PO.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Form","handleChange","e","setState","target","name","value","handleSubmit","state","quote","ranking","props","setUser","revealError","toMovies","handleRandomQuote","randomIndex","Math","floor","random","insults","length","map","insult","randomQuote","this","to","errorClass","className","alt","src","robot","type","placeholder","onChange","onClick","Component","getMovies","fetch","then","response","ok","Error","status","json","parsedData","results","movies","sort","movieA","movieB","parseInt","episode_id","getFilmCharacters","id","url","data","characters","splice","formatData","chars","getCharacterHomeworld","getCharacterSpecies","getCharacterFilms","characterUrls","charactersData","charUrl","films","homeworld","species","Promise","all","speciesData","char","homeworldData","population","filmTitles","film","title","MovieCard","episode","releaseYear","changeSelectedMovie","movieImage","slice","MovieContainer","loading","movieMap","movieList","movie","i","key","release_date","setCurrentCharacters","CharacterCard","character","classList","favoriteList","includes","starIcon","favoriteStar","star","filmList","setFavorite","CharacterContainer","isReady","characterList","opening_crawl","UserMenu","user","userQuote","userRanking","resetIsCurrentCharacterLoaded","signUserOut","FavoriteCharacters","App","componentDidMount","setImages","catch","err","console","log","favoriteCharacters","filteredFavs","filter","filmId","currentCharacters","isCurrentCharactersLoaded","selectedMovie","movieNum","movieIndex","dictionary","1","2","3","4","5","6","7","moviesWithImages","render","exact","path","setMovies","setCharacters","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa8e999a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.455cac46.gif\";","module.exports = __webpack_public_path__ + \"static/media/003-robot.c10406a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/favorite.c0210b84.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.d072b762.svg\";","import React, { Component } from 'react';\nimport './Form.css';\nimport PropTypes from 'prop-types';\nimport robot from '../images/003-robot.svg';\nimport { Redirect } from 'react-router-dom';\n\nclass Form extends Component {\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      ranking:'Nerf Herder',\n      quote: '',\n      revealError:false,\n      toMovies:false,\n      randomQuote: '' \n    }\n  }\n\n  componentDidMount() {\n    this.setState({ randomQuote: this.handleRandomQuote()});\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name] :e.target.value });\n  }\n  \n  handleSubmit = () => {\n    const { name, quote, ranking } = this.state;\n\n    if(name && quote) {\n        this.props.setUser(name, quote, ranking);\n        this.setState({ name:'' , ranking:'', quote:'', revealError:false, toMovies:true});\n    } else {\n        this.setState({revealError:true});\n    }\n  }\n\n  handleRandomQuote = () => {\n    let randomIndex = Math.floor(Math.random() * (this.props.insults.length));\n    const randomQuotes = this.props.insults.map(insult => {\n      return insult.quote;\n    });\n\n    return randomQuotes[randomIndex];\n  }\n\n  render() {\n    if(this.state.toMovies) {\n      return <Redirect to='/movies' />;\n    }\n    const errorClass = this.state.revealError ? 'error': 'hidden error';\n    return(\n      <div className='blackout'>\n        <form>\n          <div className='sidebar'>\n          <h1>Star Wars Trivia</h1>\n          <p className={errorClass}>\n            <img className='error-icon' alt='line drawing of R2D2' src={robot} />\n            Please fill out all fields\n          </p>\n            <img src='https://image.flaticon.com/icons/svg/813/813466.svg' className='logo'alt='star-wars-icon' />\n          <input \n            type = 'text'\n            name = 'name'\n            className = 'input__name'\n            placeholder = 'What do you prefer to be called?'\n            value = {this.state.name}\n            onChange = {this.handleChange}\n          />\n          <input \n            type = 'text'\n            name = 'quote'\n            className = 'input__quote'\n            placeholder = 'What is your favorite Star Wars quote?'\n            value = {this.state.quote}\n            onChange = {this.handleChange}\n          />\n          <div className='selection__menu'>\n            <h3>How Jedi Are You?</h3>\n              <select name='ranking' value={this.state.ranking} onChange={this.handleChange} >\n                <option value='Nerf Herder' className='option'>Nerf Herder</option>\n                <option value='Padawan' className='option'>Padawan</option>\n                <option value='Jedi Knight' className='option'>Jedi Knight</option>\n                <option value='Jedi Master' className='option'>Jedi Master</option>\n              </select>\n          </div>\n          <button type='button' className='btn__submit' onClick={this.handleSubmit} >\n            Submit\n          </button>\n          </div>\n        <div className='random__quote'>\n          <p className='quote__text'>{this.state.randomQuote}<span> -C3PO </span></p>\n        </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n\nForm.propTypes = {\n  setUser: PropTypes.func,\n  setMovies: PropTypes.func,\n  setCharacters: PropTypes.func,\n  insults:PropTypes.array\n}","export const getMovies = () => {\n  return fetch('https://swapi.co/api/films/')\n    .then(response => {\n      if(!response.ok) {\n        throw new Error(`Sorry, ${response.status} error.  Please check your URL`)\n      }\n      return response.json()\n    })\n    .then(parsedData => parsedData.results)\n    .then(movies => \n      movies.sort((movieA, movieB) => parseInt(movieA.episode_id) - parseInt(movieB.episode_id))\n      )\n}\n\nexport const getFilmCharacters = (id) => {\n  let url = `https://swapi.co/api/films/${id}`\n  return fetch(url)\n  .then(response => {\n    if(!response.ok) {\n      throw new Error(`Sorry, ${response.status} error.  Please check your URL`)\n    }\n    return response.json()\n  })\n  .then(data => data.characters)\n  .then(data=> data.splice(0,10))\n  .then(data => formatData(data))\n  .then(chars => getCharacterHomeworld(chars))\n  .then(chars => getCharacterSpecies(chars))\n  .then(chars => getCharacterFilms(chars))\n}\n\nconst formatData = (characterUrls) => {\n  let charactersData = characterUrls.map(charUrl => {\n    return fetch(charUrl)\n    .then(response => {\n      if(!response.ok) {\n        throw new Error(`Sorry, ${response.status} error.  Please check your URL`)\n      }\n      return response.json()\n    })\n    .then(data => {\n      return {\n        films: data.films,\n        homeworld: data.homeworld,\n        name:data.name,\n        species: data.species,\n      }\n    })\n  })\n  return Promise.all(charactersData)\n}\n\nconst getCharacterSpecies = (chars) => {\n  let speciesData = chars.map( char => {\n    return fetch(char.species)\n    .then(response => {\n      if(!response.ok) {\n        throw new Error(`Sorry, ${response.status} error.  Please check your URL`)\n      }\n      return response.json()\n    })\n    .then(species => {\n      return {\n        ...char,\n        species: species.name\n        }\n      })\n    }\n  )\n  return Promise.all(speciesData)\n}\n\nconst getCharacterHomeworld = (chars) => {\n  let homeworldData = chars.map(char => {\n    return fetch(char.homeworld).then(response => {\n      if(!response.ok) {\n        throw new Error(`Sorry, ${response.status} error.  Please check your URL`)\n      }\n      return response.json()\n    })\n    .then(homeworld => {\n      return {\n        ...char,\n        homeworld: homeworld.name,\n        population: homeworld.population\n      }\n    })\n  })\n  return Promise.all(homeworldData)\n}\n\nconst getCharacterFilms = (chars) => {\n  let films = chars.map(char => {\n    let filmTitles = char.films.map(film => {\n      return fetch(film)\n      .then(response => {\n        if(!response.ok) {\n          throw new Error(`Sorry, ${response.status} error.  Please check your URL`)\n        }\n        return response.json()\n      })\n      .then(film => film.title)\n    })\n    return Promise.all(filmTitles).then(filmTitles => {\n      return {\n        ...char,\n        films: filmTitles\n      }\n    }\n    )\n  })\n  return Promise.all(films)\n}","import React from 'react';\nimport './MovieCard.css';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MovieCard = (props) => {\n  const { episode, releaseYear, title, changeSelectedMovie, id, movieImage } = props;\n  \n    return (\n      <div className='movie__card'>\n        <h2 className='card__title'>{title}</h2>\n        <p className='card__episode'>Episode {episode}</p>\n        <img src={movieImage} className='movie_image' alt={`movie poster for ${title}`}/>\n        <p className=\"card__release\">Released in {releaseYear.slice(0, 4)}</p>\n        <Link to={`/movies/${id}`}>\n          <button onClick={e => changeSelectedMovie(e.target.id, episode - 1)} \n            className='characters__button' \n            id={id}\n          >\n            View Characters\n          </button>\n        </Link>\n      </div>\n    )\n}\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  title: PropTypes.string,\n  episode: PropTypes.number,\n  movieImage: PropTypes.string,\n  releaseYear: PropTypes.string,\n  characters: PropTypes.array,\n  changeSelectedMovie: PropTypes.func,\n  setCurrentCharacters:PropTypes.func,\n  id: PropTypes.number\n}","import React from 'react';\nimport MovieCard from '../MovieCard/MovieCard';\nimport PropTypes from 'prop-types';\nimport './MovieContainer.css';\nimport loading from '../images/loading.gif';\n\nconst MovieContainer = props => {\n  if(props.movies.length === 0){\n    return(\n      <>\n      <h1>Loading..</h1>\n      <div className='div__image'>\n        <p className='loading__text'>Please be patient,</p>\n        <p className='loading__text'>the service droids are doing their best.</p>\n        <img className='loading__image' src={loading} alt=\"BB-8 droid rolling back and forth\" />\n      </div>\n      </>\n    )\n  }\n\n  const movieMap = [4,5,6,1,2,3,7]\n  const movieList = props.movies.map((movie, i) => \n      <MovieCard \n        title={movie.title}\n        episode={movie.episode_id}\n        movieImage={movie.movieImage}\n        key={movie.episode_id}\n        releaseYear={movie.release_date}\n        characters={movie.characters}\n        changeSelectedMovie={props.changeSelectedMovie}\n        setCurrentCharacters={props.setCurrentCharacters}\n        id={movieMap[i]}\n        />)\n\n  return (\n    <section className='movie__container'>\n      {movieList}\n    </section>\n  )\n}\n\nexport default MovieContainer;\n\nMovieContainer.propTypes ={\n  movies:PropTypes.array,\n  setCurrentCharacters:PropTypes.func,\n  changeSelectedMovie:PropTypes.func, \n  characters:PropTypes.array\n}","import React from 'react';\nimport './CharacterCard.css';\nimport PropTypes from 'prop-types';\nimport favoriteStar from '../images/favorite.svg';\nimport star from '../images/star.svg';\n\nconst CharacterCard = props => {\n\n  const { films, homeworld, name, population, species} = props.character;\n  const classList = props.favoriteList && props.favoriteList.includes(name) ? 'character__card favorite' : 'character__card';\n  const starIcon = props.favoriteList && props.favoriteList.includes(name) ? favoriteStar : star;\n  const filmList = films.map((film,i) => <li key={film}>{film}</li>);\n\n  return(\n    <div className={classList}>\n      <h2 className='character__name'>{name}</h2>\n      <img className='favorite__icon' src={starIcon} alt='star icon indicatin selected favorite'/>\n      <ul className='character__data__list'>\n          <li className='character__species'>Species: {species}</li>\n          <li className='character__homeworld'>Homeworld: {homeworld}</li>\n          <li className='character__population'>Population: {population}</li>\n        </ul>\n        <ul className='character__films'>Appearing in:{filmList}</ul>\n        <div type='button' className='div__favorite' \n        onClick={()=>props.setFavorite({ films, homeworld, name, population, species }, name)}\n        >\n          Favorite\n        </div>\n    </div>\n  )\n}\n\nexport default CharacterCard;\n\nCharacterCard.propTypes = {\n  character : PropTypes.number,\n  setFavorite : PropTypes.func,\n  favoriteList : PropTypes.array \n}","import React from 'react';\nimport CharacterCard from '../CharacterCard/CharacterCard';\nimport PropTypes from 'prop-types';\nimport loading from '../images/loading.gif';\nimport './CharacterContainer.css';\n\nconst CharacterContainer = props => {\n  if(!props.isReady){\n    return(\n      <>\n      <h1>Loading..</h1>\n      <div className='div__image'>\n        <p className='loading__text'>Please be patient,</p>\n        <p className='loading__text'>the service droids are doing their best.</p>\n        <img className='loading__image' src={loading} alt=\"BB-8 droid rolling back and forth\" />\n      </div>\n      </>\n    )\n  }\n\nconst characterList = props.characters.map((character, i) => {\n\n  return <CharacterCard \n            key={i} \n            character={character}\n            setFavorite={props.setFavorite}\n            favoriteList={props.favoriteList} \n          />\n  })\n\n  return (\n    <div className='character__container-main'>\n    <section className='character__container-crawl'>\n      <div className='fade'></div>\n      <section className='crawl__text'>\n        <div className='crawl'>\n          {props.opening_crawl}\n        </div>\n      </section>\n    </section>\n    <section className='character__container'>\n      {characterList}\n    </section>\n    </div>\n  )\n\n}\n\nexport default CharacterContainer;\n\nCharacterContainer.propTypes = {\n  characters:PropTypes.array,\n  changeSelectedMovie:PropTypes.func,\n  isReady:PropTypes.bool,\n  setFavorite:PropTypes.func,\n  favoriteList:PropTypes.array,\n  opening_crawl:PropTypes.string\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './UserMenu.css';\n\nconst UserMenu = (props) => {\n    return(\n        <div className='footer'>\n        <div className='user__box'>\n            <p className='box__ends'>{props.user}</p>\n            <p>Favorite Quote: \"{props.userQuote}\"</p>\n            <p className='box__ends'>Ranking: {props.userRanking}</p>\n        </div>\n            <div className='buttons'>\n                <Link to='/movies/'>\n                    <button type='button' className='user__buttons' onClick={props.resetIsCurrentCharacterLoaded}>\n                        Back To Movies\n                    </button>\n                </Link>\n                <Link to='/favorites/'>\n                    <button type='button'className='user__buttons'>\n                        Favorite Characters\n                    </button>\n                </Link>\n                <Link to ='/'>\n                    <button type='button' className='user__buttons' onClick={props.signUserOut}>\n                        Sign Out\n                    </button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default UserMenu;\n\nUserMenu.propTypes = {\n    user: PropTypes.string,\n    userQuote: PropTypes.string,\n    userRanking: PropTypes.string,\n    resetIsCurrentCharacterLoaded: PropTypes.func,\n    signUserOut: PropTypes.func\n  }","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport CharacterCard from '../CharacterCard/CharacterCard';\nimport PropTypes from 'prop-types';\nimport loading from '../images/loading.gif';\nimport './FavoriteCharacters.css';\n\nconst FavoriteCharacters = props => {\n  if(props.favoriteList.length===0) {\n    return(\n      <>\n      <h2 className='favorite__h2'>See your favorite character!</h2>\n      <h3 className='favorite__h3'>Please select a few first.</h3>\n      <Link to='/movies'>\n        <button className='user__buttons fav__character__btn'>Back to Movies</button>\n      </Link>\n      <div className='div__image'>\n        <img className='loading__image' src={loading} alt=\"BB-8 droid rolling back and forth\" />\n      </div>\n      </>\n    )\n  }\n\nconst characterList = props.characters.map((character, i) => {\n\n  return <CharacterCard \n            key={'fav'+i} \n            character={character}\n            setFavorite={props.setFavorite}\n            favoriteList={props.favoriteList} \n          />\n  })\n  return (\n    <section className='character__container'>\n      {characterList}\n    </section>\n  )\n}\n\nexport default FavoriteCharacters;\n\nFavoriteCharacters.propTypes = {\n    characters:PropTypes.array,\n    changeSelectedMovie:PropTypes.func,\n    isReady:PropTypes.bool,\n    setFavorite:PropTypes.func,\n    favoriteList:PropTypes.array,\n  }","const insults = [\n    {quote: 'Don’t call me a mindless philosopher, you overweight glob of grease!'},\n    {quote: 'After all, he’s only a Wookiee.'},\n    {quote: 'I can’t abide these Jawas. Disgusting creatures.'},\n    {quote: 'You’ll be malfunctioning within a day, you nearsighted scrap pile.'},\n    {quote: 'Don’t worry about Master Luke. I’m sure he’ll be all right. He’s quite clever, you know… for a human being.'}\n]\n\nexport default insults;","import React, { Component } from 'react';\nimport './App.css';\nimport Form from '../Form/Form';\nimport { getMovies, getFilmCharacters } from '../apiCalls';\nimport { Route } from 'react-router-dom';\nimport MovieContainer from '../MovieContainer/MovieContainer';\nimport CharacterContainer from '../CharacterContainer/CharacterContainer';\nimport UserMenu from '../UserMenu/UserMenu';\nimport FavoriteCharacters from '../FavoriteCharacters/FavoriteCharacters';\nimport insults from '../mock-data/C3PO';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      user:'',\n      userQuote:'',\n      userRanking:'',\n      movies: [],\n      selectedMovie: '',\n      currentCharacters: [],\n      isCurrentCharactersLoaded: false,\n      favoriteCharacters: [],\n    }\n  }\n\n  componentDidMount = () => {\n    getMovies()\n    .then(data => this.setState({ movies : data }))\n    .then(()=>this.setImages())\n    .catch(err => console.log(err));\n  }\n  \n  setFavorite = (character, name) => {\n    let names = this.state.favoriteCharacters.map(character => character.name);\n    if (names.includes(name)) {\n      let filteredFavs = this.state.favoriteCharacters.filter(character => character.name !== name);\n      this.setState({ favoriteCharacters: filteredFavs});\n    } else {\n      this.setState({ favoriteCharacters:[...this.state.favoriteCharacters, character]  });\n    }\n  }\n\n  setUser = (user, userQuote, userRanking)=> {\n    this.setState({ user, userQuote, userRanking });\n  }\n\n  setCurrentCharacters = (filmId) => {\n    getFilmCharacters(filmId)\n      .then(data => this.setState({ currentCharacters:data}))\n      .then(()=> this.setState({isCurrentCharactersLoaded:true }));\n  }\n  \n  resetIsCurrentCharacterLoaded = () => {\n    this.setState({ isCurrentCharactersLoaded:false, selectedMovie:'' });\n  }\n\n  changeSelectedMovie = (movieNum, movieIndex) => {\n    this.setCurrentCharacters(movieNum)\n    this.setState({ selectedMovie : movieIndex});\n  }\n\n  setImages = () => {\n    const dictionary = {\n      1:'https://m.media-amazon.com/images/I/91NrqPMwWqL._AC_UY436_FMwebp_QL65_.jpg',\n      2:'https://images-na.ssl-images-amazon.com/images/I/91WTnoEb7RL._UR300,400_FMJPG_.jpg',\n      3:'https://m.media-amazon.com/images/I/91RuQy-UBfL._AC_UY436_FMwebp_QL65_.jpg',\n      4:'https://images-na.ssl-images-amazon.com/images/I/91Fagd6BPvL._UR300,400_FMJPG_.jpg',\n      5:'https://images-na.ssl-images-amazon.com/images/I/91mJqQ3gyhL._UR300,400_FMJPG_.jpg',\n      6:'https://images-na.ssl-images-amazon.com/images/I/91H37HUG4kL._UR300,400_FMJPG_.jpg',\n      7:'https://m.media-amazon.com/images/I/91FDYb0ehmL._AC_UY436_FMwebp_QL65_.jpg'\n    }\n    const moviesWithImages = this.state.movies.map(movie => {\n      const movieImage = dictionary[movie.episode_id];\n\n      return {\n        ...movie,\n        movieImage\n      }\n    })\n    this.setState({movies: moviesWithImages});\n  }\n\n  signUserOut = () => {\n    this.setState({\n      user: '',\n      userQuote: '',\n      userRanking: '',\n      movies: [],\n      selectedMovie: '',\n      currentCharacters: [],\n      isCurrentCharactersLoaded: false,\n      favoriteCharacters: []})\n  }\n\n  render= () => {\n    return (\n      <div className=\"App\">\n          <Route exact path='/' \n                  render={ (props)=> <Form {...props}\n                    setUser={this.setUser}\n                    setMovies={this.setMovies}\n                    setCharacters={this.setCharacters}\n                    insults={insults}\n                  />}\n          />\n\n          <Route exact path='/movies' \n                  render={ (props)=> <MovieContainer {...props} \n                    movies={this.state.movies} \n                    setCurrentCharacters={this.setCurrentCharacters} \n                    changeSelectedMovie={this.changeSelectedMovie} \n                    characters={this.currentCharacters}\n                  />}\n          />\n\n          <Route exact path='/movies/:id' \n                  render={ (props)=> <CharacterContainer {...props} \n                    characters={this.state.currentCharacters} \n                    changeSelectedMovie={this.changeSelectedMovie}\n                    isReady={this.state.isCurrentCharactersLoaded}\n                    setFavorite={this.setFavorite}\n                    favoriteList={this.state.favoriteCharacters.map(character=>character.name)}\n                    opening_crawl={this.state.movies[this.state.selectedMovie].opening_crawl}\n                  />}\n          />\n\n          <Route path='/movies'\n                  render={(props) => <UserMenu {...props} \n                    user={this.state.user} \n                    userQuote={this.state.userQuote} \n                    userRanking={this.state.userRanking}\n                    resetIsCurrentCharacterLoaded={this.resetIsCurrentCharacterLoaded}\n                    signUserOut={this.signUserOut}\n                  />} \n          />\n                  \n          <Route exact path='/favorites' \n                  render={ (props)=>\n                    <> \n                      <FavoriteCharacters {...props}    \n                        characters={this.state.favoriteCharacters} \n                        changeSelectedMovie={this.changeSelectedMovie}\n                        isReady={this.state.isCurrentCharactersLoaded}\n                        setFavorite={this.setFavorite}\n                        favoriteList={this.state.favoriteCharacters.map(character=>character.name)}\n                      />\n                      <UserMenu {...props} \n                        user={this.state.user} \n                        userQuote={this.state.userQuote} \n                        userRanking={this.state.userRanking}\n                        resetIsCurrentCharacterLoaded={this.resetIsCurrentCharacterLoaded}\n                      />\n                    </>\n                  }\n          />\n      </div>\n    );  \n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}